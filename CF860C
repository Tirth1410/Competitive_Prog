//                if (i != 0) {
////                    if (c[i] > c[i - 1]) {
////                        long gcd = Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1]))));
////                        if((a[i-1] % Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1])))) == 0 || b[i-1] == gcd) && (a[i] % Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1])))) == 0 || b[i] == gcd)){
////
////                        } else {
////                            count++;
////                        }
////                        if (Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1])))) > b[i] && a[i] % (Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1])))) / b[i]) == 0) {
////
////                        } else {
////                            count++;
////                        }
////                    } else {
////                        long gcd2 = Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1]))));
////                        if (Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1])))) > b[i-1] && a[i - 1] % (Long.valueOf(String.valueOf(BigInteger.valueOf(c[i]).gcd(BigInteger.valueOf(c[i - 1])))) / b[i - 1]) == 0) {
////
////                        } else {
////                            count++;
////                        }
////                    }
//                }
//            }
//            System.out.println(count);



CODE #2
import java.util.ArrayList;
import java.util.Scanner;
public class Garland{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

//        int [] arr = new int [n];
//        int [] ref = new int [n];
        int c =0;
        ArrayList<Integer> list = new ArrayList<>();
        ArrayList<Integer> list2 = new ArrayList<>();
        int e=0, o=0;

        for (int i = 0; i < n; i++) {
            list.add(sc.nextInt());
            if(i != 0 && list.get(i) + list.get(i-1) % 2 != 0 && list.get(i) != 0 && list.get(i-1) != 0){
                c++;
            }
        }

        for (int i = 1; i <= n; i++) {
            if(!list.contains(i)){
                if(i % 2 == 0){
                    e++;
                    list2.add(i);
                } else {
                    o++;
                    list2.add(i);
                }
            }
        }

        for (int i = 0; i < n; i++) {
            if(list.get(i) == 0){
                if(i == 0){
                    if(list.get(i+1) % 2 == 0){
                        if(e > 0){
                            e--;

                        } else {
                            o--;
                            c++;
                        }
                    } else {
                        if(o > 0){
                            o--;
                        } else {
                            e--;
                            c++;
                        }
                    }
                } else if(i == n-1){
                    if(list.get(i-1) % 2 == 0){
                        if(e>0){
                            e--;
                        } else {
                            o--;
                            c++;
                        }
                    } else {
                        if(c>0){
                            o--;
                        } else {
                            e--;
                            c++;
                        }
                    }
                } else {
                    if(list.get(i-1) % 2 == 0){
                        if(e>0){
                            e--;
                        } else {
                            o--;
                            c++;
                        }
                    } else {
                        if(o>0){
                            o--;
                        } else {
                            e--;
                            c++;
                        }
                    }
                }
            }
        }
        System.out.println(c);
    }
}